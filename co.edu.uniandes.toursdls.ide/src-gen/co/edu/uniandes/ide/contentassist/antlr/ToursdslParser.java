/*
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.ide.contentassist.antlr;

import co.edu.uniandes.ide.contentassist.antlr.internal.InternalToursdslParser;
import co.edu.uniandes.services.ToursdslGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class ToursdslParser extends AbstractContentAssistParser {

	@Inject
	private ToursdslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalToursdslParser createParser() {
		InternalToursdslParser result = new InternalToursdslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTourAccess().getGroup(), "rule__Tour__Group__0");
					put(grammarAccess.getTourAccess().getGroup_9(), "rule__Tour__Group_9__0");
					put(grammarAccess.getPanoramaAccess().getGroup(), "rule__Panorama__Group__0");
					put(grammarAccess.getPanoramaAccess().getGroup_13(), "rule__Panorama__Group_13__0");
					put(grammarAccess.getHotspotAccess().getGroup(), "rule__Hotspot__Group__0");
					put(grammarAccess.getCoordenadaAccess().getGroup(), "rule__Coordenada__Group__0");
					put(grammarAccess.getTourAccess().getNameAssignment_3(), "rule__Tour__NameAssignment_3");
					put(grammarAccess.getTourAccess().getPlacesAssignment_8(), "rule__Tour__PlacesAssignment_8");
					put(grammarAccess.getTourAccess().getPlacesAssignment_9_1(), "rule__Tour__PlacesAssignment_9_1");
					put(grammarAccess.getPanoramaAccess().getNameAssignment_3(), "rule__Panorama__NameAssignment_3");
					put(grammarAccess.getPanoramaAccess().getDescriptionAssignment_7(), "rule__Panorama__DescriptionAssignment_7");
					put(grammarAccess.getPanoramaAccess().getPlacesAssignment_12(), "rule__Panorama__PlacesAssignment_12");
					put(grammarAccess.getPanoramaAccess().getPlacesAssignment_13_1(), "rule__Panorama__PlacesAssignment_13_1");
					put(grammarAccess.getHotspotAccess().getNameAssignment_3(), "rule__Hotspot__NameAssignment_3");
					put(grammarAccess.getHotspotAccess().getDestinoAssignment_7(), "rule__Hotspot__DestinoAssignment_7");
					put(grammarAccess.getHotspotAccess().getOrigenAssignment_11(), "rule__Hotspot__OrigenAssignment_11");
					put(grammarAccess.getHotspotAccess().getPosicionAssignment_15(), "rule__Hotspot__PosicionAssignment_15");
					put(grammarAccess.getHotspotAccess().getRotacionAssignment_19(), "rule__Hotspot__RotacionAssignment_19");
					put(grammarAccess.getCoordenadaAccess().getXAssignment_3(), "rule__Coordenada__XAssignment_3");
					put(grammarAccess.getCoordenadaAccess().getYAssignment_10(), "rule__Coordenada__YAssignment_10");
					put(grammarAccess.getCoordenadaAccess().getZAssignment_17(), "rule__Coordenada__ZAssignment_17");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalToursdslParser typedParser = (InternalToursdslParser) parser;
			typedParser.entryRuleTour();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ToursdslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ToursdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
