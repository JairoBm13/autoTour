context kdm!Panorama {

	critique TwoPanoramasWithSameName {
		
		guard : true
		
		check : Panorama.allInstances().select(p : Panorama | p.nombre==self.nombre).size() == 1
		
		message : "No pueden haber 2 panoramas con el mismo nombre:  " + self.nombre
	}
	
	critique CaminoATodoPanorama {
		
		guard : true
		
		check : self.revisarCaminoAPanoramas()
		
		message : "No pueden haber 2 panoramas con el mismo nombre:  " + self.nombre
	}
}

operation Panorama revisarCaminoAPanoramas(): Boolean {

	var panoramas = Panorama.allInstances().excluding(self);
	
	for (panorama in panoramas) { 
		if(self.llegaAPanorama(panorama.nombre)) {
			return true;
		}
	}
	
	return false;
}

operation Panorama llegaAPanorama(name:String): Boolean {
	for (hotspot in self.hotspots) {
		if(hotspot.destino.nombre == name) {
			return true;
		}
		if(hotspot.destino.llegaAPanorama(name)) {
			return true;
		}
	}
}

context kdm!Hotspot {

	critique HotspotABandBA {
		
		guard : self.destino.isDefined() and self.origen.isDefined()
		
		check : self.destino.hotspots.exists(h : Hotspot | h.nombre.endsWith(self.origen.nombre))
		
		message : "Debe existir un hotspot que vaya del panorama " + self.destino.nombre + " al panorama " + self.origen.nombre
	}
	
	critique ZZeroNO {
		
		guard : self.posicion.isDefined()
		
		check : not (self.posicion.z == 0)
		
		message : "La posición del hotspot "+self.nombre+" no puede tener valor 0 en la cordanada z"
		
		fix {
		
			title : "Fijar la coordenada z de la posición en 1"
		
			do {
				self.posicion.z = 1;
			}
		}
	}
	
	critique rotacionBoundsBetween0And360 {
	
		guard : self.rotacion.isDefined()
		
		check : (self.rotacion.x >= 0 and self.rotacion.x <= 360) and (self.rotacion.y >= 0 and self.rotacion.y <= 360) and (self.rotacion.z >= 0 and self.rotacion.z <= 360)
	
		message : "La rotación del hotspot "+self.nombre+" debe tener las coordenadas entre el valor 0 y el 360"
		
		fix {
		
			title : "Cambiar los valores para las coordenadas que incumplan a valores dentro del rango"
		
			do {
			
				if(self.rotacion.x < 0) self.rotacion.x = 0;
				else if(self.rotacion.x > 360) self.rotacion.x = 360;
				
				if(self.rotacion.y < 0) self.rotacion.y = 0;
				else if(self.rotacion.y > 360) self.rotacion.y = 360;
				
				if(self.rotacion.z < 0) self.rotacion.z = 0;
				else if(self.rotacion.z > 360) self.rotacion.z = 360;
				
			}
		}
	}
}

context kdm!Tour {

	critique MinimunTwoPanoramas {
		
		guard : true
		
		check : self.panoramas.size() > 1
		
		message : "Deben existir por lo menos 2 panoramas en el tour"
	}
}