/*
 * generated by Xtext 2.12.0
 */
package co.edu.uniandes.tours.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class TourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.Tour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENING_CURLY_BRACKETTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cPLACESTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final RuleCall cOPENING_SQUARE_BRACKETTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cPanoramasAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPanoramasPanoramaParserRuleCall_8_0 = (RuleCall)cPanoramasAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final RuleCall cCOMMATerminalRuleCall_9_0 = (RuleCall)cGroup_9.eContents().get(0);
		private final Assignment cPanoramasAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cPanoramasPanoramaParserRuleCall_9_1_0 = (RuleCall)cPanoramasAssignment_9_1.eContents().get(0);
		private final RuleCall cCLOSING_SQUARE_BRACKETTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final RuleCall cCLOSING_CURLY_BRACKETTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		
		//Tour:
		//	OPENING_CURLY_BRACKET
		//	NAME COLON name=EString COMMA
		//	PLACES COLON OPENING_SQUARE_BRACKET panoramas+=Panorama (COMMA panoramas+=Panorama)* CLOSING_SQUARE_BRACKET
		//	CLOSING_CURLY_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//OPENING_CURLY_BRACKET NAME COLON name=EString COMMA PLACES COLON OPENING_SQUARE_BRACKET panoramas+=Panorama (COMMA
		//panoramas+=Panorama)* CLOSING_SQUARE_BRACKET CLOSING_CURLY_BRACKET
		public Group getGroup() { return cGroup; }
		
		//OPENING_CURLY_BRACKET
		public RuleCall getOPENING_CURLY_BRACKETTerminalRuleCall_0() { return cOPENING_CURLY_BRACKETTerminalRuleCall_0; }
		
		//NAME
		public RuleCall getNAMETerminalRuleCall_1() { return cNAMETerminalRuleCall_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//PLACES
		public RuleCall getPLACESTerminalRuleCall_5() { return cPLACESTerminalRuleCall_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//OPENING_SQUARE_BRACKET
		public RuleCall getOPENING_SQUARE_BRACKETTerminalRuleCall_7() { return cOPENING_SQUARE_BRACKETTerminalRuleCall_7; }
		
		//panoramas+=Panorama
		public Assignment getPanoramasAssignment_8() { return cPanoramasAssignment_8; }
		
		//Panorama
		public RuleCall getPanoramasPanoramaParserRuleCall_8_0() { return cPanoramasPanoramaParserRuleCall_8_0; }
		
		//(COMMA panoramas+=Panorama)*
		public Group getGroup_9() { return cGroup_9; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9_0() { return cCOMMATerminalRuleCall_9_0; }
		
		//panoramas+=Panorama
		public Assignment getPanoramasAssignment_9_1() { return cPanoramasAssignment_9_1; }
		
		//Panorama
		public RuleCall getPanoramasPanoramaParserRuleCall_9_1_0() { return cPanoramasPanoramaParserRuleCall_9_1_0; }
		
		//CLOSING_SQUARE_BRACKET
		public RuleCall getCLOSING_SQUARE_BRACKETTerminalRuleCall_10() { return cCLOSING_SQUARE_BRACKETTerminalRuleCall_10; }
		
		//CLOSING_CURLY_BRACKET
		public RuleCall getCLOSING_CURLY_BRACKETTerminalRuleCall_11() { return cCLOSING_CURLY_BRACKETTerminalRuleCall_11; }
	}
	public class PanoramaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.Panorama");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENING_CURLY_BRACKETTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cDESCRIPTIONTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final RuleCall cPATHSTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final RuleCall cCOLONTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final RuleCall cOPENING_SQUARE_BRACKETTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cHotspotsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cHotspotsHotspotParserRuleCall_12_0 = (RuleCall)cHotspotsAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final RuleCall cCOMMATerminalRuleCall_13_0 = (RuleCall)cGroup_13.eContents().get(0);
		private final Assignment cHotspotsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cHotspotsHotspotParserRuleCall_13_1_0 = (RuleCall)cHotspotsAssignment_13_1.eContents().get(0);
		private final RuleCall cCLOSING_SQUARE_BRACKETTerminalRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		private final RuleCall cCLOSING_CURLY_BRACKETTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		
		//Panorama:
		//	OPENING_CURLY_BRACKET
		//	NAME COLON name=EString COMMA
		//	DESCRIPTION COLON description=STRING COMMA
		//	PATHS COLON OPENING_SQUARE_BRACKET hotspots+=Hotspot (COMMA hotspots+=Hotspot)* CLOSING_SQUARE_BRACKET
		//	CLOSING_CURLY_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//OPENING_CURLY_BRACKET NAME COLON name=EString COMMA DESCRIPTION COLON description=STRING COMMA PATHS COLON
		//OPENING_SQUARE_BRACKET hotspots+=Hotspot (COMMA hotspots+=Hotspot)* CLOSING_SQUARE_BRACKET CLOSING_CURLY_BRACKET
		public Group getGroup() { return cGroup; }
		
		//OPENING_CURLY_BRACKET
		public RuleCall getOPENING_CURLY_BRACKETTerminalRuleCall_0() { return cOPENING_CURLY_BRACKETTerminalRuleCall_0; }
		
		//NAME
		public RuleCall getNAMETerminalRuleCall_1() { return cNAMETerminalRuleCall_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//DESCRIPTION
		public RuleCall getDESCRIPTIONTerminalRuleCall_5() { return cDESCRIPTIONTerminalRuleCall_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_8() { return cCOMMATerminalRuleCall_8; }
		
		//PATHS
		public RuleCall getPATHSTerminalRuleCall_9() { return cPATHSTerminalRuleCall_9; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10() { return cCOLONTerminalRuleCall_10; }
		
		//OPENING_SQUARE_BRACKET
		public RuleCall getOPENING_SQUARE_BRACKETTerminalRuleCall_11() { return cOPENING_SQUARE_BRACKETTerminalRuleCall_11; }
		
		//hotspots+=Hotspot
		public Assignment getHotspotsAssignment_12() { return cHotspotsAssignment_12; }
		
		//Hotspot
		public RuleCall getHotspotsHotspotParserRuleCall_12_0() { return cHotspotsHotspotParserRuleCall_12_0; }
		
		//(COMMA hotspots+=Hotspot)*
		public Group getGroup_13() { return cGroup_13; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_13_0() { return cCOMMATerminalRuleCall_13_0; }
		
		//hotspots+=Hotspot
		public Assignment getHotspotsAssignment_13_1() { return cHotspotsAssignment_13_1; }
		
		//Hotspot
		public RuleCall getHotspotsHotspotParserRuleCall_13_1_0() { return cHotspotsHotspotParserRuleCall_13_1_0; }
		
		//CLOSING_SQUARE_BRACKET
		public RuleCall getCLOSING_SQUARE_BRACKETTerminalRuleCall_14() { return cCLOSING_SQUARE_BRACKETTerminalRuleCall_14; }
		
		//CLOSING_CURLY_BRACKET
		public RuleCall getCLOSING_CURLY_BRACKETTerminalRuleCall_15() { return cCLOSING_CURLY_BRACKETTerminalRuleCall_15; }
	}
	public class HotspotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.Hotspot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENING_CURLY_BRACKETTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cTOTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cToAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cToPanoramaCrossReference_7_0 = (CrossReference)cToAssignment_7.eContents().get(0);
		private final RuleCall cToPanoramaIDTerminalRuleCall_7_0_1 = (RuleCall)cToPanoramaCrossReference_7_0.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Keyword cPositionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final RuleCall cCOLONTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Assignment cPositionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPositionPositionParserRuleCall_11_0 = (RuleCall)cPositionAssignment_11.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final Keyword cRotationKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final RuleCall cCOLONTerminalRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		private final Assignment cRotationAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cRotationRotationParserRuleCall_15_0 = (RuleCall)cRotationAssignment_15.eContents().get(0);
		private final RuleCall cCLOSING_CURLY_BRACKETTerminalRuleCall_16 = (RuleCall)cGroup.eContents().get(16);
		
		//Hotspot:
		//	OPENING_CURLY_BRACKET
		//	NAME COLON name=EString COMMA
		//	TO COLON to=[Panorama] COMMA
		//	'position' COLON position=Position COMMA
		//	'rotation' COLON rotation=Rotation
		//	CLOSING_CURLY_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//OPENING_CURLY_BRACKET NAME COLON name=EString COMMA TO COLON to=[Panorama] COMMA 'position' COLON position=Position
		//COMMA 'rotation' COLON rotation=Rotation CLOSING_CURLY_BRACKET
		public Group getGroup() { return cGroup; }
		
		//OPENING_CURLY_BRACKET
		public RuleCall getOPENING_CURLY_BRACKETTerminalRuleCall_0() { return cOPENING_CURLY_BRACKETTerminalRuleCall_0; }
		
		//NAME
		public RuleCall getNAMETerminalRuleCall_1() { return cNAMETerminalRuleCall_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//TO
		public RuleCall getTOTerminalRuleCall_5() { return cTOTerminalRuleCall_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//to=[Panorama]
		public Assignment getToAssignment_7() { return cToAssignment_7; }
		
		//[Panorama]
		public CrossReference getToPanoramaCrossReference_7_0() { return cToPanoramaCrossReference_7_0; }
		
		//ID
		public RuleCall getToPanoramaIDTerminalRuleCall_7_0_1() { return cToPanoramaIDTerminalRuleCall_7_0_1; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_8() { return cCOMMATerminalRuleCall_8; }
		
		//'position'
		public Keyword getPositionKeyword_9() { return cPositionKeyword_9; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10() { return cCOLONTerminalRuleCall_10; }
		
		//position=Position
		public Assignment getPositionAssignment_11() { return cPositionAssignment_11; }
		
		//Position
		public RuleCall getPositionPositionParserRuleCall_11_0() { return cPositionPositionParserRuleCall_11_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_12() { return cCOMMATerminalRuleCall_12; }
		
		//'rotation'
		public Keyword getRotationKeyword_13() { return cRotationKeyword_13; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_14() { return cCOLONTerminalRuleCall_14; }
		
		//rotation=Rotation
		public Assignment getRotationAssignment_15() { return cRotationAssignment_15; }
		
		//Rotation
		public RuleCall getRotationRotationParserRuleCall_15_0() { return cRotationRotationParserRuleCall_15_0; }
		
		//CLOSING_CURLY_BRACKET
		public RuleCall getCLOSING_CURLY_BRACKETTerminalRuleCall_16() { return cCLOSING_CURLY_BRACKETTerminalRuleCall_16; }
	}
	public class PositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.Position");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENING_CURLY_BRACKETTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCOORDINATE_XTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPosxAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPosxEDoubleParserRuleCall_3_0 = (RuleCall)cPosxAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCOORDINATE_YTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cPosyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPosyEDoubleParserRuleCall_7_0 = (RuleCall)cPosyAssignment_7.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final RuleCall cCOORDINATE_ZTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final RuleCall cCOLONTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Assignment cPoszAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPoszEDoubleParserRuleCall_11_0 = (RuleCall)cPoszAssignment_11.eContents().get(0);
		private final RuleCall cCLOSING_CURLY_BRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Position:
		//	OPENING_CURLY_BRACKET
		//	COORDINATE_X COLON posx=EDouble COMMA
		//	COORDINATE_Y COLON posy=EDouble COMMA
		//	COORDINATE_Z COLON posz=EDouble
		//	CLOSING_CURLY_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//OPENING_CURLY_BRACKET COORDINATE_X COLON posx=EDouble COMMA COORDINATE_Y COLON posy=EDouble COMMA COORDINATE_Z COLON
		//posz=EDouble CLOSING_CURLY_BRACKET
		public Group getGroup() { return cGroup; }
		
		//OPENING_CURLY_BRACKET
		public RuleCall getOPENING_CURLY_BRACKETTerminalRuleCall_0() { return cOPENING_CURLY_BRACKETTerminalRuleCall_0; }
		
		//COORDINATE_X
		public RuleCall getCOORDINATE_XTerminalRuleCall_1() { return cCOORDINATE_XTerminalRuleCall_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//posx=EDouble
		public Assignment getPosxAssignment_3() { return cPosxAssignment_3; }
		
		//EDouble
		public RuleCall getPosxEDoubleParserRuleCall_3_0() { return cPosxEDoubleParserRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//COORDINATE_Y
		public RuleCall getCOORDINATE_YTerminalRuleCall_5() { return cCOORDINATE_YTerminalRuleCall_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//posy=EDouble
		public Assignment getPosyAssignment_7() { return cPosyAssignment_7; }
		
		//EDouble
		public RuleCall getPosyEDoubleParserRuleCall_7_0() { return cPosyEDoubleParserRuleCall_7_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_8() { return cCOMMATerminalRuleCall_8; }
		
		//COORDINATE_Z
		public RuleCall getCOORDINATE_ZTerminalRuleCall_9() { return cCOORDINATE_ZTerminalRuleCall_9; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10() { return cCOLONTerminalRuleCall_10; }
		
		//posz=EDouble
		public Assignment getPoszAssignment_11() { return cPoszAssignment_11; }
		
		//EDouble
		public RuleCall getPoszEDoubleParserRuleCall_11_0() { return cPoszEDoubleParserRuleCall_11_0; }
		
		//CLOSING_CURLY_BRACKET
		public RuleCall getCLOSING_CURLY_BRACKETTerminalRuleCall_12() { return cCLOSING_CURLY_BRACKETTerminalRuleCall_12; }
	}
	public class RotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.Rotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOPENING_CURLY_BRACKETTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCOORDINATE_XTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCOLONTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cPosxAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPosxEDoubleParserRuleCall_3_0 = (RuleCall)cPosxAssignment_3.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCOORDINATE_YTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cCOLONTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cPosyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPosyEDoubleParserRuleCall_7_0 = (RuleCall)cPosyAssignment_7.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final RuleCall cCOORDINATE_ZTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final RuleCall cCOLONTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Assignment cPoszAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPoszEDoubleParserRuleCall_11_0 = (RuleCall)cPoszAssignment_11.eContents().get(0);
		private final RuleCall cCLOSING_CURLY_BRACKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Rotation:
		//	OPENING_CURLY_BRACKET
		//	COORDINATE_X COLON posx=EDouble COMMA
		//	COORDINATE_Y COLON posy=EDouble COMMA
		//	COORDINATE_Z COLON posz=EDouble
		//	CLOSING_CURLY_BRACKET;
		@Override public ParserRule getRule() { return rule; }
		
		//OPENING_CURLY_BRACKET COORDINATE_X COLON posx=EDouble COMMA COORDINATE_Y COLON posy=EDouble COMMA COORDINATE_Z COLON
		//posz=EDouble CLOSING_CURLY_BRACKET
		public Group getGroup() { return cGroup; }
		
		//OPENING_CURLY_BRACKET
		public RuleCall getOPENING_CURLY_BRACKETTerminalRuleCall_0() { return cOPENING_CURLY_BRACKETTerminalRuleCall_0; }
		
		//COORDINATE_X
		public RuleCall getCOORDINATE_XTerminalRuleCall_1() { return cCOORDINATE_XTerminalRuleCall_1; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_2() { return cCOLONTerminalRuleCall_2; }
		
		//posx=EDouble
		public Assignment getPosxAssignment_3() { return cPosxAssignment_3; }
		
		//EDouble
		public RuleCall getPosxEDoubleParserRuleCall_3_0() { return cPosxEDoubleParserRuleCall_3_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_4() { return cCOMMATerminalRuleCall_4; }
		
		//COORDINATE_Y
		public RuleCall getCOORDINATE_YTerminalRuleCall_5() { return cCOORDINATE_YTerminalRuleCall_5; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6() { return cCOLONTerminalRuleCall_6; }
		
		//posy=EDouble
		public Assignment getPosyAssignment_7() { return cPosyAssignment_7; }
		
		//EDouble
		public RuleCall getPosyEDoubleParserRuleCall_7_0() { return cPosyEDoubleParserRuleCall_7_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_8() { return cCOMMATerminalRuleCall_8; }
		
		//COORDINATE_Z
		public RuleCall getCOORDINATE_ZTerminalRuleCall_9() { return cCOORDINATE_ZTerminalRuleCall_9; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_10() { return cCOLONTerminalRuleCall_10; }
		
		//posz=EDouble
		public Assignment getPoszAssignment_11() { return cPoszAssignment_11; }
		
		//EDouble
		public RuleCall getPoszEDoubleParserRuleCall_11_0() { return cPoszEDoubleParserRuleCall_11_0; }
		
		//CLOSING_CURLY_BRACKET
		public RuleCall getCLOSING_CURLY_BRACKETTerminalRuleCall_12() { return cCLOSING_CURLY_BRACKETTerminalRuleCall_12; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDOTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? DOT INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? DOT INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//DOT
		public RuleCall getDOTTerminalRuleCall_2() { return cDOTTerminalRuleCall_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	
	
	private final TourElements pTour;
	private final PanoramaElements pPanorama;
	private final HotspotElements pHotspot;
	private final PositionElements pPosition;
	private final RotationElements pRotation;
	private final TerminalRule tOPENING_CURLY_BRACKET;
	private final TerminalRule tCLOSING_CURLY_BRACKET;
	private final TerminalRule tOPENING_SQUARE_BRACKET;
	private final TerminalRule tCLOSING_SQUARE_BRACKET;
	private final TerminalRule tCOLON;
	private final TerminalRule tQUOTE;
	private final TerminalRule tCOMMA;
	private final TerminalRule tDOT;
	private final TerminalRule tNAME;
	private final TerminalRule tTO;
	private final TerminalRule tPLACES;
	private final TerminalRule tDESCRIPTION;
	private final TerminalRule tPATHS;
	private final TerminalRule tCOORDINATE_X;
	private final TerminalRule tCOORDINATE_Y;
	private final TerminalRule tCOORDINATE_Z;
	private final EStringElements pEString;
	private final EDoubleElements pEDouble;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pTour = new TourElements();
		this.pPanorama = new PanoramaElements();
		this.pHotspot = new HotspotElements();
		this.pPosition = new PositionElements();
		this.pRotation = new RotationElements();
		this.tOPENING_CURLY_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.OPENING_CURLY_BRACKET");
		this.tCLOSING_CURLY_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.CLOSING_CURLY_BRACKET");
		this.tOPENING_SQUARE_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.OPENING_SQUARE_BRACKET");
		this.tCLOSING_SQUARE_BRACKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.CLOSING_SQUARE_BRACKET");
		this.tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.COLON");
		this.tQUOTE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.QUOTE");
		this.tCOMMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.COMMA");
		this.tDOT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.DOT");
		this.tNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.NAME");
		this.tTO = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.TO");
		this.tPLACES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.PLACES");
		this.tDESCRIPTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.DESCRIPTION");
		this.tPATHS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.PATHS");
		this.tCOORDINATE_X = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.COORDINATE_X");
		this.tCOORDINATE_Y = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.COORDINATE_Y");
		this.tCOORDINATE_Z = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.edu.uniandes.tours.Dsl.COORDINATE_Z");
		this.pEString = new EStringElements();
		this.pEDouble = new EDoubleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.tours.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Tour:
	//	OPENING_CURLY_BRACKET
	//	NAME COLON name=EString COMMA
	//	PLACES COLON OPENING_SQUARE_BRACKET panoramas+=Panorama (COMMA panoramas+=Panorama)* CLOSING_SQUARE_BRACKET
	//	CLOSING_CURLY_BRACKET;
	public TourElements getTourAccess() {
		return pTour;
	}
	
	public ParserRule getTourRule() {
		return getTourAccess().getRule();
	}
	
	//Panorama:
	//	OPENING_CURLY_BRACKET
	//	NAME COLON name=EString COMMA
	//	DESCRIPTION COLON description=STRING COMMA
	//	PATHS COLON OPENING_SQUARE_BRACKET hotspots+=Hotspot (COMMA hotspots+=Hotspot)* CLOSING_SQUARE_BRACKET
	//	CLOSING_CURLY_BRACKET;
	public PanoramaElements getPanoramaAccess() {
		return pPanorama;
	}
	
	public ParserRule getPanoramaRule() {
		return getPanoramaAccess().getRule();
	}
	
	//Hotspot:
	//	OPENING_CURLY_BRACKET
	//	NAME COLON name=EString COMMA
	//	TO COLON to=[Panorama] COMMA
	//	'position' COLON position=Position COMMA
	//	'rotation' COLON rotation=Rotation
	//	CLOSING_CURLY_BRACKET;
	public HotspotElements getHotspotAccess() {
		return pHotspot;
	}
	
	public ParserRule getHotspotRule() {
		return getHotspotAccess().getRule();
	}
	
	//Position:
	//	OPENING_CURLY_BRACKET
	//	COORDINATE_X COLON posx=EDouble COMMA
	//	COORDINATE_Y COLON posy=EDouble COMMA
	//	COORDINATE_Z COLON posz=EDouble
	//	CLOSING_CURLY_BRACKET;
	public PositionElements getPositionAccess() {
		return pPosition;
	}
	
	public ParserRule getPositionRule() {
		return getPositionAccess().getRule();
	}
	
	//Rotation:
	//	OPENING_CURLY_BRACKET
	//	COORDINATE_X COLON posx=EDouble COMMA
	//	COORDINATE_Y COLON posy=EDouble COMMA
	//	COORDINATE_Z COLON posz=EDouble
	//	CLOSING_CURLY_BRACKET;
	public RotationElements getRotationAccess() {
		return pRotation;
	}
	
	public ParserRule getRotationRule() {
		return getRotationAccess().getRule();
	}
	
	//terminal OPENING_CURLY_BRACKET:
	//	'{';
	public TerminalRule getOPENING_CURLY_BRACKETRule() {
		return tOPENING_CURLY_BRACKET;
	}
	
	//terminal CLOSING_CURLY_BRACKET:
	//	'}';
	public TerminalRule getCLOSING_CURLY_BRACKETRule() {
		return tCLOSING_CURLY_BRACKET;
	}
	
	//terminal OPENING_SQUARE_BRACKET:
	//	'[';
	public TerminalRule getOPENING_SQUARE_BRACKETRule() {
		return tOPENING_SQUARE_BRACKET;
	}
	
	//terminal CLOSING_SQUARE_BRACKET:
	//	']';
	public TerminalRule getCLOSING_SQUARE_BRACKETRule() {
		return tCLOSING_SQUARE_BRACKET;
	}
	
	//terminal COLON:
	//	':';
	public TerminalRule getCOLONRule() {
		return tCOLON;
	}
	
	//terminal QUOTE:
	//	"'";
	public TerminalRule getQUOTERule() {
		return tQUOTE;
	}
	
	//terminal COMMA:
	//	',';
	public TerminalRule getCOMMARule() {
		return tCOMMA;
	}
	
	//terminal DOT:
	//	'.';
	public TerminalRule getDOTRule() {
		return tDOT;
	}
	
	//terminal NAME:
	//	'name';
	public TerminalRule getNAMERule() {
		return tNAME;
	}
	
	//terminal TO:
	//	'to';
	public TerminalRule getTORule() {
		return tTO;
	}
	
	//terminal PLACES:
	//	'places';
	public TerminalRule getPLACESRule() {
		return tPLACES;
	}
	
	//terminal DESCRIPTION:
	//	'description';
	public TerminalRule getDESCRIPTIONRule() {
		return tDESCRIPTION;
	}
	
	//terminal PATHS:
	//	'paths';
	public TerminalRule getPATHSRule() {
		return tPATHS;
	}
	
	//terminal COORDINATE_X:
	//	'posx';
	public TerminalRule getCOORDINATE_XRule() {
		return tCOORDINATE_X;
	}
	
	//terminal COORDINATE_Y:
	//	'posy';
	public TerminalRule getCOORDINATE_YRule() {
		return tCOORDINATE_Y;
	}
	
	//terminal COORDINATE_Z:
	//	'posz';
	public TerminalRule getCOORDINATE_ZRule() {
		return tCOORDINATE_Z;
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? DOT INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
