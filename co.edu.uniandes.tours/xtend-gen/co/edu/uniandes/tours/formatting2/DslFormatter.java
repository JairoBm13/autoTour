/**
 * generated by Xtext 2.12.0
 */
package co.edu.uniandes.tours.formatting2;

import Tours.Hotspot;
import Tours.Panorama;
import Tours.Tour;
import co.edu.uniandes.tours.services.DslGrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class DslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DslGrammarAccess _dslGrammarAccess;
  
  protected void _format(final Tour tour, @Extension final IFormattableDocument document) {
    EList<Panorama> _panoramas = tour.getPanoramas();
    for (final Panorama panorama : _panoramas) {
      document.<Panorama>format(panorama);
    }
  }
  
  protected void _format(final Panorama panorama, @Extension final IFormattableDocument document) {
    EList<Hotspot> _hotspots = panorama.getHotspots();
    for (final Hotspot hotspot : _hotspots) {
      document.<Hotspot>format(hotspot);
    }
  }
  
  public void format(final Object panorama, final IFormattableDocument document) {
    if (panorama instanceof XtextResource) {
      _format((XtextResource)panorama, document);
      return;
    } else if (panorama instanceof Panorama) {
      _format((Panorama)panorama, document);
      return;
    } else if (panorama instanceof Tour) {
      _format((Tour)panorama, document);
      return;
    } else if (panorama instanceof EObject) {
      _format((EObject)panorama, document);
      return;
    } else if (panorama == null) {
      _format((Void)null, document);
      return;
    } else if (panorama != null) {
      _format(panorama, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(panorama, document).toString());
    }
  }
}
