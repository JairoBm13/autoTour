/*
 * generated by Xtext 2.12.0
 */
package co.edu.uniandes.tours.ide.contentassist.antlr;

import co.edu.uniandes.tours.ide.contentassist.antlr.internal.InternalDslParser;
import co.edu.uniandes.tours.services.DslGrammarAccess;
import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DslParser extends AbstractContentAssistParser {

	@Inject
	private DslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
					put(grammarAccess.getTourAccess().getGroup(), "rule__Tour__Group__0");
					put(grammarAccess.getTourAccess().getGroup_9(), "rule__Tour__Group_9__0");
					put(grammarAccess.getPanoramaAccess().getGroup(), "rule__Panorama__Group__0");
					put(grammarAccess.getPanoramaAccess().getGroup_13(), "rule__Panorama__Group_13__0");
					put(grammarAccess.getHotspotAccess().getGroup(), "rule__Hotspot__Group__0");
					put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
					put(grammarAccess.getRotationAccess().getGroup(), "rule__Rotation__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
					put(grammarAccess.getTourAccess().getNameAssignment_3(), "rule__Tour__NameAssignment_3");
					put(grammarAccess.getTourAccess().getPanoramasAssignment_8(), "rule__Tour__PanoramasAssignment_8");
					put(grammarAccess.getTourAccess().getPanoramasAssignment_9_1(), "rule__Tour__PanoramasAssignment_9_1");
					put(grammarAccess.getPanoramaAccess().getNameAssignment_3(), "rule__Panorama__NameAssignment_3");
					put(grammarAccess.getPanoramaAccess().getDescriptionAssignment_7(), "rule__Panorama__DescriptionAssignment_7");
					put(grammarAccess.getPanoramaAccess().getHotspotsAssignment_12(), "rule__Panorama__HotspotsAssignment_12");
					put(grammarAccess.getPanoramaAccess().getHotspotsAssignment_13_1(), "rule__Panorama__HotspotsAssignment_13_1");
					put(grammarAccess.getHotspotAccess().getNameAssignment_3(), "rule__Hotspot__NameAssignment_3");
					put(grammarAccess.getHotspotAccess().getToAssignment_7(), "rule__Hotspot__ToAssignment_7");
					put(grammarAccess.getHotspotAccess().getPositionAssignment_11(), "rule__Hotspot__PositionAssignment_11");
					put(grammarAccess.getHotspotAccess().getRotationAssignment_15(), "rule__Hotspot__RotationAssignment_15");
					put(grammarAccess.getPositionAccess().getPosxAssignment_3(), "rule__Position__PosxAssignment_3");
					put(grammarAccess.getPositionAccess().getPosyAssignment_7(), "rule__Position__PosyAssignment_7");
					put(grammarAccess.getPositionAccess().getPoszAssignment_11(), "rule__Position__PoszAssignment_11");
					put(grammarAccess.getRotationAccess().getPosxAssignment_3(), "rule__Rotation__PosxAssignment_3");
					put(grammarAccess.getRotationAccess().getPosyAssignment_7(), "rule__Rotation__PosyAssignment_7");
					put(grammarAccess.getRotationAccess().getPoszAssignment_11(), "rule__Rotation__PoszAssignment_11");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
